name: Python application

# Executa o workflow quando há push no repositório
on: [push]

jobs:
  build:
    strategy:
      # Continua testando em outras versões do Python, mesmo que uma falhe
      fail-fast: false
      matrix:
        # Testa o código nas versões 3.11 e 3.12 do Python
        python-version: [3.11, 3.12]

    # Usa a última versão do Ubuntu como ambiente de execução
    runs-on: ubuntu-latest

    steps:
      # Faz o checkout do repositório
      - uses: actions/checkout@v2
      # Define a versão do Python de acordo com a matriz
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # Instala o poetry
      - name: Install poetry
        run: |
          python -m ensurepip  
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry

      # Exibe a ajuda do Poetry (para verificação)
      - name: View poetry --help
        run: poetry --help

      # Instala as dependências do projeto usando o Poetry
      - name: Install dependencies
        shell: bash
        run: python -m poetry install

      # Executa os testes usando o Django
      - name: Test
        run: |
          poetry run python manage.py test
